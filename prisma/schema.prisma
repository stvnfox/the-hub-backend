// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String        @id @db.Uuid
  email    String        @unique @db.VarChar(255)
  name     String        @db.VarChar(255)
  projects ProjectUser[]
  tasks    Task[]        @relation("Tasks")
}

model ProjectUser {
  id        Int     @default(autoincrement())
  project   Project @relation(fields: [projectId], references: [id])
  projectId Int
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @db.Uuid

  @@id([projectId, userId])
}

enum Role {
  GUEST
  MEMBER
  ADMIN
}

model Project {
  id          Int           @id @default(autoincrement())
  title       String
  description String?
  published   Boolean       @default(false)
  members     ProjectUser[]
  tasks       Task[]
}

//TODO: Must haves: Add comments
//TODO: Nice to haves: Due date, attachments and iterations, created/updated by
model Task {
  id          Int            @id @default(autoincrement())
  title       String
  description String?
  status      TaskStatus     @default(NEW)
  priority    PriorityStatus @default(NORMAL)
  assignee    User?          @relation("Tasks", fields: [assigneeId], references: [id])
  assigneeId  String?        @db.Uuid
  project     Project       @relation(fields: [projectId], references: [id])
  projectId   Int
}

enum TaskStatus {
  NEW
  ACTIVE
  COMPLETED
  FEEDBACK
}

enum PriorityStatus {
  LOW
  NORMAL
  HIGH
  URGENT
}
